plugins {
    id "se.inera.intyg.plugin.common" version "3.1.0" apply false
    id "org.gretty" version "3.0.1" apply false
    id "com.moowork.node" version "1.3.1" apply false
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

ext {
    intygInfraVersion = System.properties['infraVersion'] ?: '0-SNAPSHOT'
    refDataVersion = System.properties['refDataVersion'] ?: '1.0-SNAPSHOT'

    intygHealthcondRehabilitationSchemasVersion = "1.1.3"
    blockingSchemaVersion = "4.0.1"
    consentSchemaVersion = "2.0.1"
    rivtaItintegrationMonitoringSchemasVersion = "1.0.0.5"
    internalMonitoringSchemaVersion = "1.0.4"
    intygClinicalprocessSchemasVersion = "1.0.23"
    schemasContractVersion = "2.1.8"
    srsSchemasVersion = "0.0.13"

    //activemqVersion = "5.13.0"
    //apacheHttpClientVersion = "4.5.1"
    //commonsCodecVersion = "1.10"
    //commonsIoVersion = "2.4"
    commonsIoVersion = "2.6"
    //commonsLang3Version = "3.8.1"
    cxfVersion = "3.2.4"
    //googleGuavaVersion = "24.1.1-jre"
    googleGuavaVersion = "28.2-jre"
    //h2Version = "1.3.171"
    //hibernateEntityManagerVersion = "4.3.11.Final"
    //hibernateJpaVersion = "1.0.0.Final"
    hibernateVersion = "5.3.15.Final"
    //hikariCPVersion = "2.3.5"
    //itextVersion = "7.1.7"
    itext7Version = "7.1.10"
    //jacksonVersion = "2.9.7"
    //javaxJmsVersion = "1.1-rev-1"
    //javaxMailVersion = "1.5.2"
    //javaxServletVersion = "3.1.0"
    //jaxb2Version = "1.11.1"
    jaxwsRtVersion = "2.3.2"
    jsonSimpleVersion = "1.1.1"
    //jstlVersion = "1.2"
    //liquibaseVersion = "3.3.1"
    //logbackVersion = "1.2.3"
    //mysqlVersion = "5.1.40"
    //poiVersion = "3.13"
    poiVersion = "4.1.2"
    //restAssuredVersion = "2.9.0"
    //slf4jVersion = "1.7.10"
    //springContextVersion = "4.3.16.RELEASE"
    //springDataJpaVersion = "1.11.12.RELEASE"
    springSecurityExtensionsVersion = "1.0.3.RELEASE" //Higher versions require opensaml 2.6.6 (not available 2020-03-30)
    //springSecurityVersion = "4.2.5.RELEASE"
    //springSessionVersion = "1.3.3.RELEASE"
    //springWsCoreVersion = "2.2.2.RELEASE"
    //shedlockSpringVersion = "0.18.2"
    shedlockSpringVersion = "4.5.0"
    //usertypeVersion = "5.0.0.GA"
    jadiraUserTypeVersion = "6.0.1.GA"
    //wsdl4jVersion = "1.6.3"

    //aspectjWeaverVersion = "1.6.11"
    //hamcrestVersion = "1.3"
    //junitVersion = "4.12"
    //mockitoAllVersion = "1.10.19"
    //powermockFullVersion = "1.6.4"
    testngVersion = "7.1.0"
    powermockApiVersion = "2.0.6"
    //unitilsCoreVersion = "3.3"
    unitilsCoreVersion = "3.4.6"
    nodeJsVersion = "10.16.2"
    npmVersion = "6.10.3"

    springbootMavenBomVersion = "2.2.5.RELEASE"
}

allprojects {
    apply plugin: 'se.inera.intyg.plugin.common'
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: "io.spring.dependency-management"

    repositories {
        mavenLocal()
        maven {
            url "https://build-inera.nordicmedtest.se/nexus/repository/public/"
        }
        jcenter {
            content {
                // this repository contains everything BUT artifacts with group starting with "se.inera"
                excludeGroupByRegex "se\\.inera.*"
            }
        }
    }

    dependencyManagement {
        imports { mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootMavenBomVersion}" }
    }

    dependencies {
        compile "ch.qos.logback:logback-classic"
        compile "org.slf4j:slf4j-api"

        testCompile "se.inera.intyg.refdata:refdata:${refDataVersion}"
        testCompile 'junit:junit:4.+'
        testCompile "org.mockito:mockito-core"
    }

    group = 'se.inera.intyg.rehabstod'
    version = System.properties['buildVersion'] ?: '0-SNAPSHOT'

    sourceCompatibility = 11
    targetCompatibility = 11

    task createVersionPropertyFile(type: VersionPropertyFileTask)

    uploadArchives.enabled = false

    uploadArchives.repositories.mavenDeployer {
        repository(url: "https://build-inera.nordicmedtest.se/nexus/repository/releases/") {
            authentication(userName: System.properties['nexusUsername'], password: System.properties['nexusPassword'])
        }
    }

    [install.repositories.mavenInstaller, uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
        pom.dependencies.findAll { dep -> dep.groupId == 'se.inera.intyg.infra' }.each {
            it.version = se.inera.intyg.IntygPluginKt.findResolvedVersion(project, 'se.inera.intyg.infra')
        }
    }
}

task tagRelease(type: TagReleaseTask)

def environment = project.findProperty('env') ?: "local"
se.inera.intyg.IntygPluginKt.addProjectPropertiesFromFile(project, file("$rootDir/env-properties/${environment}/settings.properties"))
