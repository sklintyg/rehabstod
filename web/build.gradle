apply plugin: 'org.gretty'
apply plugin: 'war'

def buildDirectory = project.layout.buildDirectory.get().asFile

gretty {
    def instance = System.properties['instance'] ?: '0'
    def useHttpPort = 8030 + (instance as Integer)
    def useInternalHttpPort = 8130 + (instance as Integer)
    def applicationDir = "${rootProject.projectDir}/devops/dev"

    servletContainer = 'tomcat10'
    contextPath = '/'

    integrationTestTask = null
    scanInterval = 0
    debugPort = 8830 + (instance as Integer)
    portPropertiesFileName = "gretty_ports_${instance}.properties"
    debugSuspend = false
    fastReload = true
    inplaceMode = 'hard'
    enableNaming = true
    serverConfigFile = "tomcat-gretty.xml"

    jvmArgs = ["-Dcatalina.base=${buildDirectory}/catalina.base",
               "-Dspring.profiles.active=dev,rhs-samtyckestjanst-stub,rhs-sparrtjanst-stub,rhs-srs-stub,caching-enabled,rhs-security-test,ia-stub",
               "-Dlogback.file=${applicationDir}/config/logback-dev.xml",
               "-Djava.awt.headless=true",
               "-Dfile.encoding=UTF-8",
               "-Dapplication.dir=${applicationDir}",
               "-Ddev.config.file=${applicationDir}/config/application-dev.properties",
               "-Ddev.http.port=${useHttpPort}",
               "-Ddev.http.port.internal=${useInternalHttpPort}"
    ]

    dependencies {
        gretty "se.inera.intyg.refdata:refdata:${refDataVersion}"
    }
}

test {
    environment "catalina.base",  "${buildDirectory}/catalina.base"
}

war.rootSpec.exclude "logback.xml"

dependencies {
    implementation project(":rehabstod-common")
    implementation project(":rehabstod-it-integration")
    implementation project(":rehabstod-persistence")
    implementation project(":rehabstod-samtyckestjanst-integration")
    implementation project(":rehabstod-sparrtjanst-integration")
    implementation project(":rehabstod-srs-integration")
    implementation project(":rehabstod-wc-integration")

    implementation "se.inera.intyg.clinicalprocess.healthcond.rehabilitation:intyg-clinicalprocess-healthcond-rehabilitation-schemas:${intygHealthcondRehabilitationSchemasVersion}"
    implementation "se.inera.intyg.schemas:schemas-contract:${schemasContractVersion}"
    implementation "se.riv.clinicalprocess.healthcond.monitoring:clinicalprocess-healthcond-monitoring-schemas:${internalMonitoringSchemaVersion}"
    implementation "se.riv.informationsecurity.authorization.consent:informationsecurity-authorization-consent-schemas:${consentSchemaVersion}"
    implementation "se.riv.itintegration.monitoring:itintegration-monitoring-schemas:${rivtaItintegrationMonitoringSchemasVersion}"

    implementation "se.inera.intyg.infra:certificate:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:common-redis-cache-core:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:driftbanner-dto:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:dynamiclink:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:hsa-integration-api:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:ia-integration:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:log-messages:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:monitoring:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:pu-integration:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:security-authorities:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:security-common:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:security-filter:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:security-siths:${intygInfraVersion}"
    implementation "se.inera.intyg.infra:sjukfall-engine:${intygInfraVersion}"

    implementation "com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider"
    implementation "com.google.guava:guava:${googleGuavaVersion}"
    implementation "com.itextpdf:itext7-core:${itext7Version}"
    implementation "io.prometheus:simpleclient_servlet"
    implementation "net.javacrumbs.shedlock:shedlock-provider-redis-spring:${shedlockSpringVersion}"
    implementation "jakarta.ws.rs:jakarta.ws.rs-api"
    implementation "org.apache.activemq:activemq-spring"
    implementation "org.apache.commons:commons-lang3"
    implementation "org.apache.cxf:cxf-rt-features-logging:${cxfVersion}"
    implementation "org.apache.cxf:cxf-rt-frontend-jaxws:${cxfVersion}"
    implementation "org.apache.cxf:cxf-rt-transports-http:${cxfVersion}"
    implementation "org.apache.httpcomponents.client5:httpclient5"
    implementation "org.apache.poi:poi-ooxml:${poiVersion}"
    implementation "codes.rafael.jaxb2_commons:jaxb2-basics:${jaxb2Version}"
    implementation "org.springframework.data:spring-data-jpa"
    implementation "org.springframework.security.extensions:spring-security-saml2-core:${springSecurityExtensionsVersion}"
    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-web"
    implementation "org.springframework.session:spring-session-data-redis"
    implementation "org.springframework:spring-jms"
    implementation "org.springframework:spring-webmvc"

    compileOnly "jakarta.jms:jakarta.jms-api"
    compileOnly "jakarta.persistence:jakarta.persistence-api"
    compileOnly 'org.projectlombok:lombok'

    testCompileOnly "jakarta.persistence:jakarta.persistence-api"
    testCompileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    runtimeOnly "com.mysql:mysql-connector-j"
    runtimeOnly "se.inera.intyg.infra:hsa-integration-intyg-proxy-service:${intygInfraVersion}"

    testImplementation "org.springframework:spring-test"
    testImplementation "org.testng:testng:${testngVersion}"
}
